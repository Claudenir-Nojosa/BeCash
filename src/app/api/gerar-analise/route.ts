// app/api/gerar-analise/route.ts
import { NextRequest, NextResponse } from "next/server";
import OpenAI from "openai";

// Inicializar o cliente OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function POST(request: NextRequest) {
  try {
    const { prompt } = await request.json();

    if (!prompt) {
      return NextResponse.json(
        { error: "Prompt √© obrigat√≥rio" },
        { status: 400 }
      );
    }

    if (!process.env.OPENAI_API_KEY) {
      console.error("OPENAI_API_KEY n√£o est√° configurada");
      return NextResponse.json(
        { error: "API key n√£o configurada" },
        { status: 500 }
      );
    }

    // System prompt para an√°lise tribut√°ria especializada
    const systemPrompt = `
Voc√™ √© um especialista em contabilidade e an√°lise tribut√°ria brasileira com mais de 20 anos de experi√™ncia.
Sua tarefa √© analisar dados financeiros e fiscais de empresas e gerar relat√≥rios detalhados e precisos.

DIRETRIZES:
1. Forne√ßa uma an√°lise completa, profissional e t√©cnica
2. Use terminologia cont√°bil e tribut√°ria adequada ao contexto brasileiro
3. Compare os resultados m√™s a m√™s com percentuais de varia√ß√£o
4. Calcule percentuais de carga tribut√°ria efetiva
5. Identifique oportunidades de economia fiscal baseadas na legisla√ß√£o brasileira
6. Destaque pontos de aten√ß√£o e riscos fiscais
7. Forne√ßa recomenda√ß√µes espec√≠ficas para o regime tribut√°rio informado
8. Formate a resposta em markdown com t√≠tulos claros
9. Inclua tabelas comparativas quando apropriado
10. Baseie-se na legisla√ß√£o tribut√°ria vigente no Brasil

ESPECIFICA√á√ïES T√âCNICAS:
- Use como refer√™ncia a legisla√ß√£o brasileira (Leis, Instru√ß√µes Normativas, etc.)
- Considere as particularidades de cada estado (UF) para ICMS
- Diferencie an√°lises para Simples Nacional, Lucro Presumido e Lucro Real
- Considere as diferentes atividades (com√©rcio, ind√∫stria, servi√ßos)

ESTRUTURA SUGERIDA:
# An√°lise Tribut√°ria - [Nome da Empresa]

## üìä Resumo Executivo
[Vis√£o geral com os pontos mais importantes]

## üìà An√°lise Comparativa Mensal
[Comparativo m√™s a m√™s com tabelas]

## üí∞ C√°lculo de Percentuais Tribut√°rios
[Carga tribut√°ria efetiva e comparativos]

## üè≠ An√°lise por Atividade
[An√°lise espec√≠fica para cada atividade]

## üí° Oportunidades de Economia Tribut√°ria
[Sugest√µes baseadas na legisla√ß√£o]

## ‚ö†Ô∏è Pontos de Aten√ß√£o
[Riscos e observa√ß√µes importantes]

## ‚úÖ Recomenda√ß√µes Espec√≠ficas
[A√ß√µes concretas a serem tomadas]

## üéØ Pr√≥ximos Passos
[Cronograma e prioridades]
`;

    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo", 
      messages: [
        {
          role: "system",
          content: systemPrompt,
        },
        {
          role: "user",
          content: prompt,
        },
      ],
      max_tokens: 4000,
      temperature: 0.3, // Baixa temperatura para respostas mais precisas
      top_p: 0.9,
    });

    const analise = completion.choices[0]?.message?.content;

    if (!analise) {
      throw new Error("N√£o foi poss√≠vel gerar a an√°lise");
    }

    return NextResponse.json({ analise });
  } catch (error) {
    console.error("Erro ao gerar an√°lise:", error);

    // Tratamento de erro seguro para TypeScript
    const errorMessage =
      error instanceof Error ? error.message : "Erro interno do servidor";

    return NextResponse.json({ error: errorMessage }, { status: 500 });
  }
}
